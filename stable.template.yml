name: %%CRATE%% stable build

on:
  push:
    branches: [ trigger/stable ]
  workflow_dispatch:

env:
  index: https://github.com/crow-rest/cargo-prebuilt-index/releases/download/stable-index/
  crate: %%CRATE%%
  version: %%VERSION%%
  dl: %%DOWNLOAD%%
  checksum: %%CHECKSUM%%
  bins: %%BINS%%

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ahmadnassri/action-workflow-queue@v1
        with:
          timeout: 10800000
      - name: Create Release
        if: %%IF%%
        uses: meeDamian/github-release@v2.0.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.crate }}-${{ env.version }}
          name: ${{ env.crate }}-${{ env.version }}
          prerelease: true
          allow_override: true

  x86_64-unknown-linux-gnu:
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            build/target
          key: ${{ runner.os }}-${{ env.crate }}-${{ env.version }}-stable-x86_64-unknown-linux-gnu
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - name: Create Directory
        run: mkdir -p build
      - name: Download and extract crate
        run: |
          wget ${{ env.dl }}
          echo "${{ env.checksum }} download" | sha256sum -c
          tar -xf download
          mv ${{ env.crate }}-${{ env.version }}/* build
      - name: Build crate
        working-directory: ./build
        run: cargo build --release %%FLAGS%%
      - name: Collect
        run: ./scripts/collect.py x86_64-unknown-linux-gnu ./build/target/release ${{ env.bins }}
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: x86_64-unknown-linux-gnu
          path: |
            x86_64-unknown-linux-gnu.tar.gz
            x86_64-unknown-linux-gnu.sha256
      - name: Release Artifact
        if: %%IF%%
        uses: svenstaro/upload-release-action@2.3.0
        with:
          tag: ${{ env.crate }}-${{ env.version }}
          overwrite: true
          prerelease: true
          file_glob: true
          file: x86_64-unknown-linux-gnu.*

  x86_64-apple-darwin:
      runs-on: macos-latest
      needs: [setup]
      steps:
        - uses: actions/checkout@v3
        - uses: actions/cache@v3
          with:
            path: |
              ~/.cargo/registry
              ~/.cargo/git
              build/target
            key: ${{ runner.os }}-${{ env.crate }}-${{ env.version }}-stable-x86_64-apple-darwin
        - name: Get pkgs
          run: brew install coreutils
        - name: Update Rust
          run: rustup update
        - name: Rust Version
          run: rustc --version
        - name: Create Directory
          run: mkdir -p build
        - name: Download and extract crate
          run: |
            wget ${{ env.dl }}
            echo "${{ env.checksum }} download" | sha256sum -c
            tar -xf download
            mv ${{ env.crate }}-${{ env.version }}/* build
        - name: Build crate
          working-directory: ./build
          run: cargo build --release %%FLAGS%%
        - name: Collect
          run:  ./scripts/collect.py x86_64-apple-darwin ./build/target/release ${{ env.bins }}
        - name: Artifact
          uses: actions/upload-artifact@v3
          with:
            name: x86_64-apple-darwin
            path: |
              x86_64-apple-darwin.tar.gz
              x86_64-apple-darwin.sha256
        - name: Release Artifact
          if: %%IF%%
          uses: svenstaro/upload-release-action@2.3.0
          with:
            tag: ${{ env.crate }}-${{ env.version }}
            overwrite: true
            prerelease: true
            file_glob: true
            file: x86_64-apple-darwin.*

  x86_64-pc-windows-msvc:
      runs-on: windows-latest
      needs: [setup]
      steps:
        - uses: actions/checkout@v3
        - uses: actions/cache@v3
          with:
            path: |
              ~/.cargo/registry
              ~/.cargo/git
              build/target
            key: ${{ runner.os }}-${{ env.crate }}-${{ env.version }}-stable-x86_64-pc-windows-msvc
        - name: Update Rust
          run: rustup update
        - name: Rust Version
          run: rustc --version
        - name: Create Directory
          run: New-Item -ItemType Directory -Force -Path ./build
        - name: Download and extract crate
          run: |
            Invoke-WebRequest -Uri ${{ env.dl }} -OutFile download
            (Get-FileHash ./download).Hash -eq "${{ env.checksum }}"
            tar -xf download
            mv ${{ env.crate }}-${{ env.version }}/* build
        - name: Build crate
          working-directory: ./build
          run: cargo build --release %%FLAGS%%
        - name: Collect
          run: python3  ./scripts/collect.py x86_64-pc-windows-msvc ./build/target/release ${{ env.bins }}
        - name: Artifact
          uses: actions/upload-artifact@v3
          with:
            name: x86_64-pc-windows-msvc
            path: |
              x86_64-pc-windows-msvc.tar.gz
              x86_64-pc-windows-msvc.sha256
        - name: Release Artifact
          if: %%IF%%
          uses: svenstaro/upload-release-action@2.3.0
          with:
            tag: ${{ env.crate }}-${{ env.version }}
            overwrite: true
            prerelease: true
            file_glob: true
            file: x86_64-pc-windows-msvc.*

  aarch64-apple-darwin:
    runs-on: macos-latest
    needs: [setup]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            build/target
          key: ${{ runner.os }}-${{ env.crate }}-${{ env.version }}-stable-aarch64-apple-darwin
      - name: Get pkgs
        run: brew install coreutils
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - name: Add Rust target
        run: rustup target add aarch64-apple-darwin
      - name: MacOS SDK
        run: |
          export SDKROOT=$(xcrun -sdk macosx --show-sdk-path)
          export MACOSX_DEPLOYMENT_TARGET=$(xcrun -sdk macosx --show-sdk-platform-version)
      - name: Create Directory
        run: mkdir -p build
      - name: Download and extract crate
        run: |
            wget ${{ env.dl }}
            echo "${{ env.checksum }} download" | sha256sum -c
            tar -xf download
            mv ${{ env.crate }}-${{ env.version }}/* build
      - name: Build crate
        working-directory: ./build
        run: cargo build --release %%FLAGS%%
      - name: Collect
        run: ./scripts/collect.py aarch64-apple-darwin ./build/target/release ${{ env.bins }}
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: aarch64-apple-darwin
          path: |
            aarch64-apple-darwin.tar.gz
            aarch64-apple-darwin.sha256
      - name: Release Artifact
        if: %%IF%%
        uses: svenstaro/upload-release-action@2.3.0
        with:
          tag: ${{ env.crate }}-${{ env.version }}
          overwrite: true
          prerelease: true
          file_glob: true
          file: aarch64-apple-darwin.*

  cross:
    strategy:
      matrix:
        target: [%%TARGETS%%]
    runs-on: ubuntu-latest
    needs: [setup]
    env:
      CROSS_CONFIG: ../Cross.toml
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            build/target
          key: ${{ runner.os }}-${{ env.crate }}-${{ env.version }}-stable-${{ matrix.target }}
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - uses: taiki-e/install-action@v1
        with:
          tool: cross
      - name: Create Directory
        run: mkdir -p build
      - name: Download and extract crate
        run: |
          wget ${{ env.dl }}
          echo "${{ env.checksum }} download" | sha256sum -c
          tar -xf download
          mv ${{ env.crate }}-${{ env.version }}/* build
      - name: Build crate
        working-directory: ./build
        run: cross build --release --target ${{ matrix.target }} %%FLAGS%%
      - name: Collect
        run: ./scripts/collect.py ${{ matrix.target }} ./build/target/${{ matrix.target }}/release ${{ env.bins }}
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: |
            ${{ matrix.target }}.tar.gz
            ${{ matrix.target }}.sha256
      - name: Release Artifact
        if: %%IF%%
        uses: svenstaro/upload-release-action@2.3.0
        with:
          tag: ${{ env.crate }}-${{ env.version }}
          overwrite: true
          prerelease: true
          file_glob: true
          file: ${{ matrix.target }}.*

  push-index:
    if: %%IF%%
    runs-on: ubuntu-latest
    needs: [setup, x86_64-unknown-linux-gnu, x86_64-apple-darwin, x86_64-pc-windows-msvc, aarch64-apple-darwin, cross]
    steps:
      - uses: actions/checkout@v3
      - name: Create index file
        run: echo "${{ env.version }}" > ${{ env.crate }}
      - name: Push to index
        uses: svenstaro/upload-release-action@2.3.0
        with:
          tag: stable-index
          overwrite: true
          file: ${{ env.crate }}

