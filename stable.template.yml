name: %%CRATE%% stable build

on:
  push:
    branches: [ trigger/stable ]
  workflow_dispatch:

env:
  index: https://github.com/crow-rest/cargo-prebuilt-index/releases/download/stable-index/
  crate: %%CRATE%%
  version: %%VERSION%%
  dl: %%DOWNLOAD%%
  checksum: %%CHECKSUM%%
  bins: %%BINS%%
  CARGO_TERM_COLOR: always

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ahmadnassri/action-workflow-queue@v1.1.0
        if: %%IF%%
        with:
          timeout: 10800000
      - name: Create Folders
        run: |
          mkdir -p ~/.cargo/registry/index
          mkdir -p ~/.cargo/registry/cache
          mkdir -p ~/.cargo/git/db
          mkdir -p ./bundle/build
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git/db
          key: ${{ runner.os }}-${{ env.crate }}-${{ env.version }}-stable-deps
      - name: Download crate and check hash
        run: |
          wget ${{ env.dl }}
          echo "${{ env.checksum }} ${{ env.crate }}-${{ env.version }}.crate" | sha256sum -c
          tar -xf ${{ env.crate }}-${{ env.version }}.crate
          mv ${{ env.crate }}-${{ env.version }}/* bundle/build
      - name: Download Deps
        working-directory: ./bundle/build
        run: cargo +stable fetch --verbose
      - name: Generate reports
        working-directory: ./bundle/build
        run: |
          test -f Cargo.lock || cargo +stable generate-lockfile --verbose
          echo "Generated on: $(date --utc)" > ../../deps.report && cargo +stable tree --verbose -e no-dev >> ../../deps.report
          echo "Generated on: $(date --utc)" > ../../audit.report && cargo audit >> ../../audit.report || true
      - name: Bundle Deps
        run: |
          mkdir -p ./bundle/store/registry
          mkdir -p ./bundle/store/git
          cp -r ~/.cargo/registry/index ./bundle/store/registry/index
          cp -r ~/.cargo/registry/cache ./bundle/store/registry/cache
          cp -r ~/.cargo/git/db ./bundle/store/git/db
      - name: Store crate and crate deps
        uses: actions/upload-artifact@v3
        with:
          name: crate
          path: bundle
          retention-days: 1
      - name: Store reports
        uses: actions/upload-artifact@v3
        with:
          name: reports
          path: "*.report"
      - name: Release Reports
        if: %%IF%%
        uses: svenstaro/upload-release-action@2.5.0
        with:
          tag: ${{ env.crate }}-${{ env.version }}
          release_name: ${{ env.crate }}-${{ env.version }}
          overwrite: true
          prerelease: true
          file_glob: true
          file: "*.report"

  x86_64-unknown-linux-gnu:
    runs-on: ubuntu-latest
    needs: [ setup ]
    steps:
      - uses: actions/checkout@v3
      - name: Download crate and deps
        uses: actions/download-artifact@v3
        with:
          name: crate
      - name: Move deps
        run: mv ./store/* ~/.cargo
      - uses: actions/cache@v3
        with:
          path: |
           build/target
          key: ${{ runner.os }}-${{ env.crate }}-${{ env.version }}-stable-x86_64-unknown-linux-gnu
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - uses: crow-rest/cargo-prebuilt-action@v1
      - name: Install tools
        run: cargo prebuilt cargo-auditable
      - name: Build crate
        working-directory: ./build
        run: cargo +stable auditable build --verbose --release %%FLAGS%%
      - name: Collect
        run: ./scripts/collect.py x86_64-unknown-linux-gnu ./build/target/release ${{ env.bins }}
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: x86_64-unknown-linux-gnu
          path: |
            x86_64-unknown-linux-gnu.tar.gz
            x86_64-unknown-linux-gnu.sha256
      - name: Release Artifact
        if: %%IF%%
        uses: svenstaro/upload-release-action@2.5.0
        with:
          tag: ${{ env.crate }}-${{ env.version }}
          release_name: ${{ env.crate }}-${{ env.version }}
          overwrite: true
          prerelease: true
          file_glob: true
          file: x86_64-unknown-linux-gnu.*

  x86_64-apple-darwin:
    runs-on: macos-latest
    needs: [ setup ]
    steps:
      - uses: actions/checkout@v3
      - name: Download crate and deps
        uses: actions/download-artifact@v3
        with:
          name: crate
      - name: Move deps
        run: mv ./store/* ~/.cargo
      - uses: actions/cache@v3
        with:
          path: |
           build/target
          key: ${{ runner.os }}-${{ env.crate }}-${{ env.version }}-stable-x86_64-apple-darwin
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - uses: crow-rest/cargo-prebuilt-action@v1
      - name: Install tools
        run: cargo prebuilt cargo-auditable
      - name: Build crate
        working-directory: ./build
        run: cargo +stable auditable build --verbose --release %%FLAGS%%
      - name: Collect
        run: ./scripts/collect.py x86_64-apple-darwin ./build/target/release ${{ env.bins }}
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: x86_64-apple-darwin
          path: |
            x86_64-apple-darwin.tar.gz
            x86_64-apple-darwin.sha256
      - name: Release Artifact
        if: %%IF%%
        uses: svenstaro/upload-release-action@2.5.0
        with:
          tag: ${{ env.crate }}-${{ env.version }}
          release_name: ${{ env.crate }}-${{ env.version }}
          overwrite: true
          prerelease: true
          file_glob: true
          file: x86_64-apple-darwin.*

  aarch64-apple-darwin:
    runs-on: macos-latest
    needs: [ setup ]
    steps:
      - uses: actions/checkout@v3
      - name: Download crate and deps
        uses: actions/download-artifact@v3
        with:
          name: crate
      - name: Move deps
        run: mv ./store/* ~/.cargo
      - uses: actions/cache@v3
        with:
          path: |
           build/target
          key: ${{ runner.os }}-${{ env.crate }}-${{ env.version }}-stable-aarch64-apple-darwin
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - name: Add Rust target
        run: rustup target add aarch64-apple-darwin
      - uses: crow-rest/cargo-prebuilt-action@v1
      - name: Install tools
        run: cargo prebuilt cargo-auditable
      - name: Build crate
        working-directory: ./build
        run: cargo +stable auditable build --verbose --release --target aarch64-apple-darwin %%FLAGS%%
      - name: Collect
        run: ./scripts/collect.py aarch64-apple-darwin ./build/target/aarch64-apple-darwin/release ${{ env.bins }}
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: aarch64-apple-darwin
          path: |
            aarch64-apple-darwin.tar.gz
            aarch64-apple-darwin.sha256
      - name: Release Artifact
        if: %%IF%%
        uses: svenstaro/upload-release-action@2.5.0
        with:
          tag: ${{ env.crate }}-${{ env.version }}
          release_name: ${{ env.crate }}-${{ env.version }}
          overwrite: true
          prerelease: true
          file_glob: true
          file: aarch64-apple-darwin.*

  x86_64-pc-windows-msvc:
    runs-on: windows-latest
    needs: [ setup ]
    steps:
      - uses: actions/checkout@v3
      - name: Download crate and deps
        uses: actions/download-artifact@v3
        with:
          name: crate
      - name: Move deps
        run: mv ./store/* ~/.cargo
      - uses: actions/cache@v3
        with:
          path: |
           build/target
          key: ${{ runner.os }}-${{ env.crate }}-${{ env.version }}-stable-x86_64-pc-windows-msvc
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - uses: crow-rest/cargo-prebuilt-action@v1
      - name: Install tools
        run: cargo prebuilt cargo-auditable
      - name: Build crate
        working-directory: ./build
        run: cargo +stable auditable build --verbose --release %%FLAGS%%
      - name: Collect
        run: python3  ./scripts/collect.py x86_64-pc-windows-msvc ./build/target/release ${{ env.bins }}
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: x86_64-pc-windows-msvc
          path: |
            x86_64-pc-windows-msvc.tar.gz
            x86_64-pc-windows-msvc.sha256
      - name: Release Artifact
        if: %%IF%%
        uses: svenstaro/upload-release-action@2.5.0
        with:
          tag: ${{ env.crate }}-${{ env.version }}
          release_name: ${{ env.crate }}-${{ env.version }}
          overwrite: true
          prerelease: true
          file_glob: true
          file: x86_64-pc-windows-msvc.*

  opt-i686-pc-windows-msvc:
    if: %%WIN_32_BUILD%%
    runs-on: windows-latest
    needs: [ setup ]
    steps:
      - uses: actions/checkout@v3
      - name: Download crate and deps
        uses: actions/download-artifact@v3
        with:
          name: crate
      - name: Move deps
        run: mv ./store/* ~/.cargo
      - uses: actions/cache@v3
        with:
          path: |
           build/target
          key: ${{ runner.os }}-${{ env.crate }}-${{ env.version }}-stable-i686-pc-windows-msvc
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - name: Add Rust target
        run: rustup target add i686-pc-windows-msvc
      - uses: crow-rest/cargo-prebuilt-action@v1
      - name: Install tools
        run: cargo prebuilt cargo-auditable
      - name: Build crate
        working-directory: ./build
        run: cargo +stable auditable build --verbose --release --target i686-pc-windows-msvc %%FLAGS%%
      - name: Collect
        run: python3  ./scripts/collect.py i686-pc-windows-msvc ./build/target/i686-pc-windows-msvc/release ${{ env.bins }}
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: i686-pc-windows-msvc
          path: |
            i686-pc-windows-msvc.tar.gz
            i686-pc-windows-msvc.sha256
      - name: Release Artifact
        if: %%IF%%
        uses: svenstaro/upload-release-action@2.5.0
        with:
          tag: ${{ env.crate }}-${{ env.version }}
          release_name: ${{ env.crate }}-${{ env.version }}
          overwrite: true
          prerelease: true
          file_glob: true
          file: i686-pc-windows-msvc.*

  cross:
    strategy:
      fail-fast: false
      matrix:
        target: [ x86_64-unknown-linux-musl, aarch64-unknown-linux-gnu, aarch64-unknown-linux-musl ]
    runs-on: ubuntu-latest
    needs: [ setup ]
    env:
      CROSS_CONFIG: ../Cross.toml
    steps:
      - uses: actions/checkout@v3
      - name: Download crate and deps
        uses: actions/download-artifact@v3
        with:
          name: crate
      - name: Move deps
        run: mv ./store/* ~/.cargo
      - uses: actions/cache@v3
        with:
          path: |
           build/target
          key: ${{ runner.os }}-${{ env.crate }}-${{ env.version }}-stable-${{ matrix.target }}
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - uses: crow-rest/cargo-prebuilt-action@v1
      - name: Install tools
        run: |
          cargo prebuilt cross
          cross --version
      - name: Build crate
        working-directory: ./build
        run: cross +stable build --verbose --release --target ${{ matrix.target }} %%FLAGS%%
      - name: Collect
        run: ./scripts/collect.py ${{ matrix.target }} ./build/target/${{ matrix.target }}/release ${{ env.bins }}
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: |
            ${{ matrix.target }}.tar.gz
            ${{ matrix.target }}.sha256
      - name: Release Artifact
        if: %%IF%%
        uses: svenstaro/upload-release-action@2.5.0
        with:
          tag: ${{ env.crate }}-${{ env.version }}
          release_name: ${{ env.crate }}-${{ env.version }}
          overwrite: true
          prerelease: true
          file_glob: true
          file: ${{ matrix.target }}.*

  opt-cross:
    strategy:
      fail-fast: false
      matrix:
        target: [ %%TARGETS%% ]
    runs-on: ubuntu-latest
    needs: [ setup ]
    env:
      CROSS_CONFIG: ../Cross.toml
    steps:
      - uses: actions/checkout@v3
      - name: Download crate and deps
        uses: actions/download-artifact@v3
        with:
          name: crate
      - name: Move deps
        run: mv ./store/* ~/.cargo
      - uses: actions/cache@v3
        with:
          path: |
           build/target
          key: ${{ runner.os }}-${{ env.crate }}-${{ env.version }}-stable-${{ matrix.target }}
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - uses: crow-rest/cargo-prebuilt-action@v1
      - name: Install tools
        run: |
          cargo prebuilt cross
          cross --version
      - name: Build crate
        working-directory: ./build
        run: cross +stable build --verbose --release --target ${{ matrix.target }} %%FLAGS%%
      - name: Collect
        run: ./scripts/collect.py ${{ matrix.target }} ./build/target/${{ matrix.target }}/release ${{ env.bins }}
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: |
            ${{ matrix.target }}.tar.gz
            ${{ matrix.target }}.sha256
      - name: Release Artifact
        if: %%IF%%
        uses: svenstaro/upload-release-action@2.5.0
        with:
          tag: ${{ env.crate }}-${{ env.version }}
          release_name: ${{ env.crate }}-${{ env.version }}
          overwrite: true
          prerelease: true
          file_glob: true
          file: ${{ matrix.target }}.*

  push-index:
    if: %%IF%%
    runs-on: ubuntu-latest
    needs: [ setup, x86_64-unknown-linux-gnu, x86_64-apple-darwin, aarch64-apple-darwin, x86_64-pc-windows-msvc, cross ]
    steps:
      - uses: actions/checkout@v3
      - name: Create index file
        run: echo "${{ env.version }}" > ${{ env.crate }}
      - name: Push to index
        uses: svenstaro/upload-release-action@2.5.0
        with:
          tag: stable-index
          overwrite: true
          file: ${{ env.crate }}
