name: trunk

on:
  push:
    branches: [ main ]
    paths: [ .github/workflows/trunk.yml ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
#  schedule:
#    - cron: '0 6 * * *'

# imgs: &imgs [ rust, node, rustnode ]
# archs: &archs [ amd64, arm64 ]
# distros: &distros [ debian-latest, debian-bullseye-slim, debian-buster, debian-buster-slim, ubuntu-latest, ubuntu-focal ] # alpine-latest, alpine-3.15, alpine-3.14,
# node_versions: &node_versions [ node, --lts ]

env:
  stable-index: https://github.com/crow-rest/binary-cargo-tools/releases/download/stable-index/
  nightly-index: https://github.com/crow-rest/binary-cargo-tools/releases/download/nightly-index/
  crate: trunk
  repo: https://github.com/thedodd/trunk.git
  license: LICENSE-APACHE,LICENSE-MIT
  bins: trunk

jobs:
  # Stable
  stable-check:
    outputs:
      crate-version: ${{ steps.check.outputs.version }}
      crate-download: ${{ steps.check.outputs.dl }}
      create-hash: ${{ steps.check.outputs.hash }}
      build: ${{ steps.check.outputs.build }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ahmadnassri/action-workflow-queue@v1
      - uses: actions/cache@v3
        if: ${{ github.event_name != 'pull_request' }}
        with:
          path: |
            ${{ env.crate }}.cache
          key: stable-${{ env.crate }}-${{ env.repo }}-${{ secrets.CACHE_VERSION }}
      - name: Check and Configure
        id: check
        run: ./check.py stable ${{ env.stable-index }} ${{ env.crate }}
      - name: Release Artifact
        #        if: ${{ github.event_name != 'pull_request' }}
        uses: meeDamian/github-release@v2.0.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.crate }}-${{ steps.check.outputs.version }}
          draft: true # Remove
          allow_override: true

  stable-build-x64_86-linux-gnu:
    needs: [ stable-check ]
    if: ${{ needs.stable-check.outputs.build == 'true' }}
    env:
      CRATE_VERSION: ${{ needs.stable-check.outputs.crate-version }}
      CRATE_DOWNLOAD: ${{ needs.stable-check.outputs.crate-download }}
      CRATE_HASH: ${{ needs.stable-check.outputs.crate-hash }}
      BUILD: ${{ needs.stable-check.outputs.build }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            build/target
          key: ${{ runner.os }}-x64_86-linux-gnu-${{ hashFiles('**/Cargo.lock') }}
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - name: Create Directory
        run: mkdir -p build
      - name: Download and extract crate # Use checksum!!!
        working-directory: ./build
        run: |
          wget $CRATE_DOWNLOAD
          tar -xf download
          echo "Crate Hash: $CRATE_HASH"
      - name: Build crate
        working-directory: ./build/${{ env.crate }}-${{ env.CRATE_VERSION }}
        run: cargo build --release
      - name: Collect
        run: ./collect.py ${{ env.bins }} ${{ env.license }} x64_86-linux-gnu ./build/${{ env.crate }}-${{ env.CRATE_VERSION }} ./build/${{ env.crate }}-${{ env.CRATE_VERSION }}/target/release
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: x64_86-linux-gnu
          path: |
            x64_86-linux-gnu.zip
            x64_86-linux-gnu.sha256
      - name: Release Artifact
#        if: ${{ github.event_name != 'pull_request' }}
        uses: meeDamian/github-release@v2.0.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.crate }}-${{ env.CRATE_VERSION }}
          gzip: false
          allow_override: true
          files: >
            x64_86-linux-gnu.zip
            x64_86-linux-gnu.sha256

  stable-build-x64_86-apple-darwin:
    needs: [ stable-check ]
    if: ${{ needs.stable-check.outputs.build == 'true' }}
    env:
      CRATE_VERSION: ${{ needs.stable-check.outputs.crate-version }}
      CRATE_DOWNLOAD: ${{ needs.stable-check.outputs.crate-download }}
      CRATE_HASH: ${{ needs.stable-check.outputs.crate-hash }}
      BUILD: ${{ needs.stable-check.outputs.build }}
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            build/target
          key: ${{ runner.os }}-x64_86-apple-darwin-${{ hashFiles('**/Cargo.lock') }}
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - name: Create Directory
        run: mkdir -p build
      - name: Download and extract crate # Use checksum!!!
        working-directory: ./build
        run: |
          wget $CRATE_DOWNLOAD
          tar -xf download
          echo "Crate Hash: $CRATE_HASH"
      - name: Build crate
        working-directory: ./build/${{ env.crate }}-${{ env.CRATE_VERSION }}
        run: cargo build --release
      - name: Collect
        run: ./collect.py ${{ env.bins }} ${{ env.license }} x64_86-apple-darwin ./build/${{ env.crate }}-${{ env.CRATE_VERSION }} ./build/${{ env.crate }}-${{ env.CRATE_VERSION }}/target/release
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: x64_86-apple-darwin
          path: |
            x64_86-apple-darwin.zip
            x64_86-apple-darwin.sha256
      - name: Release Artifact
        #        if: ${{ github.event_name != 'pull_request' }}
        uses: meeDamian/github-release@v2.0.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.crate }}-${{ env.CRATE_VERSION }}
          gzip: false
          allow_override: true
          files: >
            x64_86-apple-darwin.zip
            x64_86-apple-darwin.sha256



  # Nightly
  
  # OLD
